parameters:
  ghprbPullId: ''
  Operation: ''
  wcfPRServiceUri: "http://wcfcoresrv2.cloudapp.net/PRServiceMaster/pr.ashx"
  wcfPRServiceId: ''
  sourceBranch: $(Build.SourceBranch)

steps:
    # Get the PR ID or Branch name, the Service will sync to whichever is provided.
  - script: |
      if not "%OPERATION%"=="branch" if not "%OPERATION%"=="pr" (
        echo Invalid operation mode specified.
        set _EXITCODE=1
        goto done
      )
      if '%OPERATION%'=='pr' (
        echo Operation is set to: %OPERATION%
        goto pr
      )
      if '%OPERATION%'=='branch' (
        echo Operation is set to: %OPERATION%
        goto branch
      )

      :pr
      echo Parse the PR ID from environment variable 'Build.SourceBranch': %SOURCEBRANCH%
      set GHPRBPULLID=%SOURCEBRANCH:refs/pull/=%
      set GHPRBPULLID=%GHPRBPULLID:/merge=%
      echo The PR ID is: %GHPRBPULLID%
      goto done

      :branch
      echo Set the repo branch to be what build.SourceBranchName is: %BUILD_SOURCEBRANCHNAME%
      REM The following vso call sets a variable that is accessible further down in the PowerShell script to Sync the PR Service.
      echo ##vso[task.setvariable variable=branchName]%BUILD_SOURCEBRANCHNAME%
      goto done

      :done
      exit /b %_EXITCODE%

    displayName: Set_Operation_PR_or_Branch_Windows
    env:
      GHPRBPULLID: ${{ parameters.ghprbPullId }}
      SOURCEBRANCH: ${{ parameters.sourceBranch }}
      OPERATION: ${{ parameters.Operation }}
    condition: and(always(), eq(variables['Agent.Os'], 'Windows_NT'), eq(variables['_UpdateService'], 'true'))
    # Get the PR number on Unix
  - bash: |
      split("refs/pull/123/merge", a, "/", seps)
      $GHPRBPULLID=$a[3]

    displayName: Set_GitHub_Pull_Id_Unix
    env:
      GHPRBPULLID: ${{ parameters.ghprbPullId }}
    condition: and(always(), ne(variables['Agent.Os'], 'Windows_NT'), eq(variables['_UpdateService'], 'true'))
    # Sync the Service to the PR on Windows.
  - powershell: |
      Write-Host "The WCF Root dir is: $env:Build_SourcesDirectory"
      Write-Host "Variable wcfPRServiceId is set to: $env:WCFPRSERVICEID"
      Write-Host "Variable Operation is set to: $env:OPERATION"
      Write-Host "Variable wcfPRServiceUri is set to: $env:WCFPRSERVICEURI"
      Write-Host "Variable branchName is set to: $env:branchName"
      invoke-command -Scriptblock { & "$env:Build_SourcesDirectory\src\System.Private.ServiceModel\tools\scripts\sync-pr.cmd "$env:WCFPRSERVICEID $env:OPERATION $env:WCFPRSERVICEURI $env:branchName"" }
      $LASTEXITCODE

    displayName: Sync_PRService
    env:
      OPERATION: ${{ parameters.Operation }}
      WCFPRSERVICEURI: ${{ parameters.wcfPRServiceUri }}
      WCFPRSERVICEID: ${{ parameters.wcfPRServiceId }}
    condition: and(always(), eq(variables['Agent.Os'], 'Windows_NT'), eq(variables['_UpdateService'], 'true'))
